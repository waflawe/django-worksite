openapi: 3.0.3
info:
  title: Worksite API
  version: 1.1.0
paths:
  /api/v1/add_rating/:
    post:
      operationId: api_v1_add_rating_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '201':
          description: No response body
        '400':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
  /api/v1/apply_offer/:
    post:
      operationId: api_v1_apply_offer_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
  /api/v1/company/{uname}/:
    get:
      operationId: api_v1_company_retrieve
      parameters:
      - in: path
        name: uname
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDetail'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
  /api/v1/company/{uname}/ratings/:
    get:
      operationId: api_v1_company_ratings_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: uname
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRatingsList'
          description: ''
  /api/v1/my_applyed_offers/:
    get:
      operationId: api_v1_my_applyed_offers_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOffersList'
          description: ''
  /api/v1/my_offers/:
    get:
      operationId: api_v1_my_offers_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOffersList'
          description: ''
    post:
      operationId: api_v1_my_offers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Offers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Offers'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          description: No response body
        '400':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
  /api/v1/my_offers/{ids}/:
    delete:
      operationId: api_v1_my_offers_destroy
      parameters:
      - in: path
        name: ids
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '201':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
  /api/v1/schema/:
    get:
      operationId: api_v1_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/update_settings/:
    post:
      operationId: api_v1_update_settings_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
        '400':
          description: No response body
  /api/v1/vacancys/:
    get:
      operationId: api_v1_vacancys_list
      description: Вьюсет для отображения всех, одной, удаления, добавления вакансий
        на сайте.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVacancysList'
          description: ''
    post:
      operationId: api_v1_vacancys_create
      description: Вьюсет для отображения всех, одной, удаления, добавления вакансий
        на сайте.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vacancys'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vacancys'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vacancys'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          description: No response body
        '400':
          description: No response body
  /api/v1/vacancys/{ids}/:
    get:
      operationId: api_v1_vacancys_retrieve
      description: Вьюсет для отображения всех, одной, удаления, добавления вакансий
        на сайте.
      parameters:
      - in: path
        name: ids
        schema:
          type: integer
        description: A unique integer value identifying this vacancy.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vacancys'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
    delete:
      operationId: api_v1_vacancys_destroy
      description: Вьюсет для отображения всех, одной, удаления, добавления вакансий
        на сайте.
      parameters:
      - in: path
        name: ids
        schema:
          type: integer
        description: A unique integer value identifying this vacancy.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
  /api/v1/vacancys/{ids}/offers/:
    get:
      operationId: api_v1_vacancys_offers_list
      parameters:
      - in: path
        name: ids
        schema:
          type: integer
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOffersList'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          description: ''
  /authorization/token/login/:
    post:
      operationId: authorization_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - authorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /authorization/token/logout/:
    post:
      operationId: authorization_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - authorization
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    CompanyDetail:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        company_name:
          type: string
          readOnly: true
        date_joined:
          type: object
          additionalProperties: {}
          readOnly: true
        company_info:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - company_info
      - company_name
      - date_joined
      - username
    DefaultError:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    Offers:
      type: object
      properties:
        vacancy:
          type: integer
        id:
          type: integer
          readOnly: true
        applicant:
          type: string
          readOnly: true
        resume:
          type: string
          readOnly: true
        resume_text:
          type: string
          nullable: true
          minLength: 64
          maxLength: 2048
        time_added:
          type: object
          additionalProperties: {}
          readOnly: true
        time_applyed:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - applicant
      - id
      - resume
      - time_added
      - time_applyed
      - vacancy
    PaginatedOffersList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Offers'
    PaginatedRatingsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Ratings'
    PaginatedVacancysList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vacancys'
    RatingEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - 1
        * `2` - 2
        * `3` - 3
        * `4` - 4
        * `5` - 5
    Ratings:
      type: object
      properties:
        applicant:
          type: string
          readOnly: true
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          maximum: 5
          minimum: 0
        comment:
          type: string
          nullable: true
          minLength: 64
          maxLength: 2048
        time_added:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - applicant
      - rating
      - time_added
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
    Vacancys:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          type: object
          additionalProperties: {}
          readOnly: true
        name:
          type: string
          maxLength: 100
          minLength: 8
        money:
          type: integer
          maximum: 1000000
          minimum: 100
        experience:
          type: string
          readOnly: true
        city:
          type: string
          maxLength: 20
        time_added:
          type: object
          additionalProperties: {}
          readOnly: true
        archived:
          type: boolean
      required:
      - city
      - company
      - experience
      - id
      - money
      - name
      - time_added
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
